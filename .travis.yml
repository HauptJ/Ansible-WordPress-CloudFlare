---
sudo: required

env:
  - distribution: centos
    version: 7

services:
  - docker

before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible .'

script:
  - chmod -x vault_test.txt
  - rm roles/ansible-role-updates/meta/main.yml
  - rm roles/ansible-role-fail2ban-firewalld/meta/main.yml
  - rm roles/ansible-role-redis/meta/main.yml
  - rm roles/ansible-role-openresty/meta/main.yml
  - rm roles/ansible-role-mariadb/meta/main.yml
  - rm roles/ansible-role-php-fpm/meta/main.yml
  - rm roles/ansible-role-wordpress/meta/main.yml
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup --volume="${PWD}":/root ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /root/wordpress.yml --vault-password-file /root/vault_test.txt --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /root/wordpress.yml --vault-password-file /root/vault_test.txt'
  - 'sudo docker rm -f "$(cat ${container_id})"'
  # Test CV
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup --volume="${PWD}":/root ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /root/cv.yml --vault-password-file /root/vault_test.txt --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /root/cv.yml --vault-password-file /root/vault_test.txt'
  - 'sudo docker rm -f "$(cat ${container_id})"'
